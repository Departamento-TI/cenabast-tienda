"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7594],{4173:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=t(5893),o=t(1151);const s={title:"Sale Channels",published:!0,date:new Date("2023-11-11T14:02:49.917Z"),editor:"markdown",dateCreated:new Date("2023-10-26T21:45:58.170Z")},i="Overview",a={id:"Store Project/development-functionalities/sale-channels",title:"Sale Channels",description:"This doc explains how the implementation of Sale Channels (ie. eCommerce, Intermediaci\xf3n) was done in the Spree Cenabast project.",source:"@site/docs/2_Store Project/development-functionalities/sale-channels.md",sourceDirName:"2_Store Project/development-functionalities",slug:"/Store Project/development-functionalities/sale-channels",permalink:"/cenabast-tienda/docs/Store Project/development-functionalities/sale-channels",draft:!1,unlisted:!1,editUrl:"https://github.com/Departamento-TI/cenabast-tienda/edit/main/docs/docs/2_Store Project/development-functionalities/sale-channels.md",tags:[],version:"current",frontMatter:{title:"Sale Channels",published:!0,date:"2023-11-11T14:02:49.917Z",editor:"markdown",dateCreated:"2023-10-26T21:45:58.170Z"},sidebar:"tutorialSidebar",previous:{title:"Development Functionalities",permalink:"/cenabast-tienda/docs/Store Project/development-functionalities/"},next:{title:"Guidelines",permalink:"/cenabast-tienda/docs/Store Project/development-guidelines/"}},l={},c=[{value:"Implementation",id:"implementation",level:2},{value:"Current Store find logic",id:"current-store-find-logic",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",mermaid:"mermaid",p:"p",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This doc explains how the implementation of Sale Channels (ie. eCommerce, Intermediaci\xf3n) was done in the Spree Cenabast project."})}),"\n",(0,r.jsxs)(n.p,{children:["See also: ",(0,r.jsx)(n.a,{href:"/cenabast-tienda/docs/Store%20Project/functionalities/channels",children:"Sale Channel definition, explanation of business logic"})]}),"\n",(0,r.jsxs)(n.p,{children:["Each Sale Channel was represented by a ",(0,r.jsx)(n.a,{href:"https://dev-docs.spreecommerce.org/internals/stores",children:"Spree::Store"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"A Spree::Store is associated with a set of products, enabled payment methods, layout configuration and other preferences.\nIn that way, it's well suited to represent the differences between each Sale Channel."}),"\n",(0,r.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"current_store_finder"})," dependancy was modified to use a custom finder class. The original finder detects the Store based on the URL. Our Store Finder will work based on the current user preferences."]}),"\n",(0,r.jsxs)(n.p,{children:["Each user now has a ",(0,r.jsx)(n.code,{children:"current_store"})," and a set of ",(0,r.jsx)(n.code,{children:"availiable_stores"}),". The user is able to switch between stores amongst its enabled ones (only the ",(0,r.jsx)(n.code,{children:"availiable_stores"}),"). The behaviour of toggling, setting and reading the current store was defined using a concern (",(0,r.jsx)(n.code,{children:"Cenabast::Spree::User::StorePreference"}),")."]}),"\n",(0,r.jsx)(n.p,{children:"Admin users by default have all the stores enabled."}),"\n",(0,r.jsxs)(n.p,{children:["A controller ",(0,r.jsx)(n.code,{children:"Cenabast::Spree::UserPreferencesController"})," was defined in order to allow users to toggle their preferences (store, etc), from the frontend."]}),"\n",(0,r.jsx)(n.p,{children:"The store toggle logic can be interated from the frontend via a dropdown menu present in the header."}),"\n",(0,r.jsx)(n.h3,{id:"current-store-find-logic",children:"Current Store find logic"}),"\n",(0,r.jsx)(n.mermaid,{value:'flowchart TD\n    A[Spree::Core::ControllerHelpers::Store#current_store] --\x3e|Use current_store_finder| B[Cenabast::Spree::Stores::FindCurrent]\n    B --\x3e |Consider user allowed stores| C[current_user.availiable_stores]\n    B --\x3e |Consider current stores for user| D["Spree::Store.where(id: current_user.current_store_id)"]'})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(7294);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);