"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5391],{5650:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var i=t(5893),o=t(1151);const s={title:"Dev. Guidelines",published:!0,date:new Date("2023-11-07T16:11:59.721Z"),editor:"markdown",dateCreated:new Date("2023-11-07T16:11:59.720Z")},r="Dev Guidelines",d={id:"Store Project/development-guidelines/ruby-development",title:"Dev. Guidelines",description:"Rubocop will be in charge for review all PRs. \ud83e\uddd0",source:"@site/docs/2_Store Project/development-guidelines/ruby-development.md",sourceDirName:"2_Store Project/development-guidelines",slug:"/Store Project/development-guidelines/ruby-development",permalink:"/cenabast-tienda/docs/Store Project/development-guidelines/ruby-development",draft:!1,unlisted:!1,editUrl:"https://github.com/Departamento-TI/cenabast-tienda/edit/master/docs/docs/2_Store Project/development-guidelines/ruby-development.md",tags:[],version:"current",frontMatter:{title:"Dev. Guidelines",published:!0,date:"2023-11-07T16:11:59.721Z",editor:"markdown",dateCreated:"2023-11-07T16:11:59.720Z"},sidebar:"tutorialSidebar",previous:{title:"Guidelines",permalink:"/cenabast-tienda/docs/Store Project/development-guidelines/"},next:{title:"Prototyping",permalink:"/cenabast-tienda/docs/Store Project/draft-wireframes-prototyping"}},l={},c=[{value:"Contribution Guidelines",id:"contribution-guidelines",level:2},{value:"Linting",id:"linting",level:2},{value:"Testing",id:"testing",level:2}];function a(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"dev-guidelines",children:"Dev Guidelines"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Rubocop will be in charge for review all PRs. \ud83e\uddd0"})}),"\n",(0,i.jsx)(n.h2,{id:"contribution-guidelines",children:"Contribution Guidelines"}),"\n",(0,i.jsxs)(n.p,{children:["Devs should follow the recommended ",(0,i.jsx)(n.a,{href:"https://dev-docs.spreecommerce.org/customization/logic",children:"Spree customization logic"})," when extending existing Spree behaviour."]}),"\n",(0,i.jsxs)(n.p,{children:["Consider using ",(0,i.jsx)(n.a,{href:"https://docs.gitlab.com/ee/development/reusing_abstractions.html",children:"Reusable abstractions"})," like Service Classes, and Finders (amongst others)."]}),"\n",(0,i.jsx)(n.p,{children:"Ideally, code must be aligned towards the Spree and RoR framework design guidelines. And only create new or different structures as it becames necessary."}),"\n",(0,i.jsx)(n.h2,{id:"linting",children:"Linting"}),"\n",(0,i.jsx)(n.p,{children:"All contributions must pass the lint analysis provided by the configured tools:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rubocop"}),"\n",(0,i.jsx)(n.li,{children:"Bundle-audit"}),"\n",(0,i.jsx)(n.li,{children:"brakeman"}),"\n",(0,i.jsx)(n.li,{children:"slim-lint"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We recomed configuring your IDE to check those in real time."}),"\n",(0,i.jsx)(n.p,{children:"If overcommit is configured, some of those tests can be run as a git hook in the pre-commit or pre-push steps."}),"\n",(0,i.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(n.p,{children:"All new features added in a contribution, should be tested using Rspec."}),"\n",(0,i.jsx)(n.p,{children:"Depending on the feature added, model/controller/request/behaviour/etc tests could be written."})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var i=t(7294);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);