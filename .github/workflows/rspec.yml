name: Rspec

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
        ports:
          - 9200:9200
        env:
          DISABLE_SECURITY_PLUGIN: 'true'
          xpack.security.enabled: false
          ES_JAVA_OPTS: '-Xms512m -Xmx512m'
          cluster.name: cenabast
          node.name: elasticsearch
          ELASTIC_PASSWORD: elastic_password
          discovery.type: 'single-node'
          network.host: 0.0.0.0
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: cenabast
          POSTGRES_PASSWORD: yourpassword
          POSTGRES_DB: cenabast_test
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Ruby 3.2.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true
    - name: 'Setup DB, Run tests'
      run: |
        printenv
        bin/rails db:create db:schema:load
        yarn install
        yarn build
        bundle exec rake assets:precompile
        bundle exec rspec
      env:
        CENABAST_API_BASE_URL: https://testaplicacionesweb.cenabast.cl:7001
        CENABAST_API_BASE_PATH: /interoperabilidad/servicios/api/v1
        RAILS_ENV: test
        DB_HOST: localhost
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        ELASTICSEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
